{"version":3,"sources":["components/NotesList/NotesList.module.css","components/Container/Container.jsx","components/NotesList/Icon .jsx","components/NotesList/Button.jsx","redux/notesSlicers.js","redux/notesSelectors.js","components/NotesList/Form.jsx","components/NotesList/FormEdit.jsx","components/NotesList/NotesList.jsx","components/SummaryList/SummaryList.jsx","App.js","redux/store.js","index.js","components/Container/Container.module.css"],"names":["module","exports","Container","children","className","s","container","CurrentIcon","nameCategory","component","bodyRowIcon","Button","type","btn","initialState","notes","JSON","parse","window","localStorage","getItem","initialNotes","notesSlice","createSlice","name","reducers","addNote","state","payload","deleteNote","filter","note","id","archiveNote","map","archive","updateNote","rootReducer","combineReducers","reducer","actions","getNotes","Form","date","Date","dateFormat","moment","format","useState","open","setOpen","category","setCategory","setName","created","setCreated","content","setContent","dates","setDates","useSelector","dispatch","useDispatch","uuidv4","handleClose","event","reason","boxCreateBtn","onClick","openBtn","Dialog","disableEscapeKeyDown","onClose","DialogTitle","DialogContent","Box","fullWidth","autoComplete","sx","display","flexWrap","width","FormControl","TextField","label","variant","formInput","value","onChange","e","target","style","marginTop","marginBottom","defaultValue","InputLabel","Select","labelId","lable","MenuItem","DialogActions","preventDefault","find","toLowerCase","saveNote","EditForm","editNote","handleCloseEditor","nameEdit","setNameEdit","categoryEdit","setCategoryEdit","createdEdit","setCreatedEdit","contentEdit","setContentEdit","datesEdit","setDatesEdit","updatedNote","console","log","saveUpdateNote","NotesList","activeNotes","archiveNotes","archiveList","setArchiveList","openEditor","setOpenEditor","setEditNote","handleClickDelete","handleClickArchive","handleClickUpdate","useEffect","setItem","stringify","Paper","Table","TableHead","TableRow","headerRow","TableCell","headerDescr","headerIcon","fontSize","activeIcon","archiveIcon","TableBody","bodyRow","scope","bodyRowName","bodyDescr","bodyIconBtn","SummaryList","categoryList","uniqNote","n","active","push","App","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5194a4b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerRow\":\"NotesList_headerRow__2rkU5\",\"headerDescr\":\"NotesList_headerDescr__6VIAr\",\"headerIcon\":\"NotesList_headerIcon__3SVIl\",\"bodyRow\":\"NotesList_bodyRow__2ozav\",\"bodyIconBtn\":\"NotesList_bodyIconBtn__JTV3c\",\"bodyRowName\":\"NotesList_bodyRowName__1QYum\",\"bodyDescr\":\"NotesList_bodyDescr__2_P03\",\"bodyRowIcon\":\"NotesList_bodyRowIcon__1PHdF\",\"btn\":\"NotesList_btn__7mKMg\",\"boxCreateBtn\":\"NotesList_boxCreateBtn__3ryKv\",\"inputCategory\":\"NotesList_inputCategory__1ZFgM\",\"openBtn\":\"NotesList_openBtn__3_hkb\",\"activeIcon\":\"NotesList_activeIcon__1AjTh\",\"archiveIcon\":\"NotesList_archiveIcon__3bFq7\"};","import s from './Container.module.css';\r\n\r\nexport default function Container({children}){\r\n    return <div className={s.container}>{children}</div>;\r\n}","import LocalGroceryStore from '@mui/icons-material/LocalGroceryStore';\r\nimport PsychologyIcon from '@mui/icons-material/Psychology';\r\nimport LightbulbIcon from '@mui/icons-material/Lightbulb';\r\nimport FormatQuoteIcon from '@mui/icons-material/FormatQuote';\r\nimport s from './NotesList.module.css';\r\n\r\n// const categories=[\r\n//     {name:\"Task\", icon:\"LocalGroceryStore\"},\r\n//     {name:\"Random Thought\",icon:\"PsychologyIcon\"},\r\n//     {name:\"Idea\", icon:\"LightbulbIcon\"},\r\n//     {name:\"Quote\",icon:\"FormatQuoteIcon\" }\r\n// ]\r\n\r\n// const getCategoryIcon=(nameCategory)=>{\r\n\r\n//     const currentIcon=categories.find(category=>nameCategory.component=== category.name).icon\r\n//     console.log(currentIcon)\r\n//     return currentIcon;\r\n//         }\r\n\r\nexport default function CurrentIcon(nameCategory) {\r\n  return (\r\n    <>\r\n      {/* {getCategoryIcon(nameCategory,categories)} */}\r\n      \r\n      {nameCategory.component === 'Task' && (\r\n        <LocalGroceryStore className={s.bodyRowIcon} />\r\n      )}\r\n      {nameCategory.component === 'Random Thought' && (\r\n        <PsychologyIcon className={s.bodyRowIcon} />\r\n      )}\r\n      {nameCategory.component === 'Idea' && (\r\n        <LightbulbIcon className={s.bodyRowIcon} />\r\n      )}\r\n      {nameCategory.component === 'Quote' && (\r\n        <FormatQuoteIcon className={s.bodyRowIcon} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import s from \"./NotesList.module.css\";\r\n\r\n\r\nexport default function Button({children}){\r\n    return(\r\n        <button type=\"button\" className={s.btn}>{children}</button>\r\n    )\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport initialNotes from '../data.json';\r\n\r\nconst initialState = {\r\n  notes: JSON.parse(window.localStorage.getItem('notes')) ?? initialNotes,\r\n};\r\n\r\nconst notesSlice = createSlice({\r\n  name: 'notes',\r\n  initialState,\r\n  reducers: {\r\n    addNote: (state, { payload }) => ({\r\n      ...state,\r\n      notes: [...state.notes, payload],\r\n    }),\r\n    deleteNote: (state, { payload }) => ({\r\n      ...state,\r\n      notes: state.notes.filter(note => note.id !== payload),\r\n    }),\r\n    archiveNote: (state, { payload }) => ({\r\n      ...state,\r\n      notes: state.notes.map(note =>\r\n        note.id === payload ? { ...note, archive: !note.archive } : note,\r\n      ),\r\n    }),\r\n    updateNote:(state, { payload}) => ({\r\n      ...state,\r\n      notes: state.notes.map(note =>\r\n        note.id === payload.id? { ...payload}:note\r\n      ),\r\n    }),\r\n  },\r\n});\r\n\r\nconst rootReducer = combineReducers({\r\n  notes: notesSlice.reducer,\r\n});\r\n\r\nexport const { addNote, deleteNote,archiveNote,updateNote } = notesSlice.actions;\r\n\r\n\r\nexport default rootReducer;\r\n"," export const getNotes = state => state.notes.notes;\r\n \r\n\r\n\r\n","import { useState} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport TextField from '@mui/material/TextField';\r\nimport { addNote } from '../../redux/notesSlicers';\r\nimport moment from 'moment';\r\nimport {getNotes} from '../../redux/notesSelectors';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './NotesList.module.css';\r\n\r\nexport default function Form() {\r\n  const date = new Date();\r\n  const dateFormat = moment(date).format('MMM DD, YYYY');\r\n  const [open, setOpen] = useState(false);\r\n  const [category, setCategory] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [created, setCreated] = useState(`${dateFormat}`);\r\n  const [content, setContent] = useState('');\r\n  const [dates, setDates] = useState('');\r\n \r\n\r\n  const notes = useSelector(getNotes);\r\n  const dispatch = useDispatch();\r\n  \r\n  const note = {\r\n    id: uuidv4(),\r\n    name,\r\n    created,\r\n    category,\r\n    content,\r\n    dates,\r\n    archive:false,\r\n  };\r\n  const saveNote = note => dispatch(addNote(note));\r\n\r\n  const handleChange = event => {\r\n    setCategory(event.target.value);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason !== 'backdropClick') {\r\n      setOpen(false);\r\n    }\r\n  };\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    const findNote = notes.find(\r\n      note => note.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n\r\n    if (findNote) {\r\n      return;\r\n    } else {\r\n      saveNote(note);\r\n      setName('');\r\n      setCategory('');\r\n      setCreated('');\r\n      setContent('');\r\n      setDates('');\r\n    }\r\n    handleClose(event);\r\n  };\r\n\r\n  return (\r\n    <> \r\n    <div className={s.boxCreateBtn}>\r\n      <Button onClick={handleClickOpen} className={s.openBtn}>Create Note</Button>\r\n      </div>\r\n      <Dialog disableEscapeKeyDown open={open} onClose={handleClose}>\r\n        <DialogTitle>Fill the note</DialogTitle>\r\n        <DialogContent>\r\n          <Box\r\n            component=\"form\"\r\n            fullWidth\r\n            autoComplete=\"off\"\r\n            sx={{ display: 'flex', flexWrap: 'wrap', width: '100%' }}\r\n          >\r\n            <FormControl>\r\n              <TextField\r\n                id=\"noteName\"\r\n                label=\"Note's name\"\r\n                variant=\"outlined\"\r\n                className={s.formInput}\r\n                value={name}\r\n                onChange={e => setName(e.target.value)}\r\n                style={{ marginTop: 10, marginBottom: 10 }}\r\n              />\r\n\r\n              <TextField\r\n                id=\"created\"\r\n                label=\"Created\"\r\n                defaultValue={`${dateFormat}`}\r\n                variant=\"filled\"\r\n                className={s.formInput}\r\n                style={{ marginBottom: 10 }}\r\n              />\r\n              <FormControl>\r\n              <InputLabel id=\"category\">Category</InputLabel>\r\n              <Select\r\n                labelId=\"category\"\r\n                lable=\"Choose Category\"\r\n                id=\"select-category\"\r\n                value={category}\r\n                onChange={handleChange}\r\n                variant=\"outlined\"\r\n                style={{ marginTop: 10, marginBottom: 10 }}\r\n              >\r\n                <MenuItem value={'Task'}>Task</MenuItem>\r\n                <MenuItem value={'Random Thought'}>Random Thought</MenuItem>\r\n                <MenuItem value={'Idea'}>Idea</MenuItem>\r\n                <MenuItem value={'Quote'}>Quote</MenuItem>\r\n              </Select>\r\n              </FormControl>\r\n              <TextField\r\n                id=\"content\"\r\n                label=\"Content\"\r\n                variant=\"outlined\"\r\n                className={s.formInput}\r\n                value={content}\r\n                onChange={e => setContent(e.target.value)}\r\n                style={{ marginBottom: 10 }}\r\n              />\r\n              <TextField\r\n                id=\"dates\"\r\n                label=\"Dates\"\r\n                variant=\"outlined\"\r\n                className={s.formInput}\r\n                value={dates}\r\n                onChange={e => setDates(e.target.value)}\r\n              />\r\n            </FormControl>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={handleSubmit}>Ok</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport TextField from '@mui/material/TextField';\r\nimport { updateNote } from '../../redux/notesSlicers';\r\nimport { getNotes } from '../../redux/notesSelectors';\r\nimport s from './NotesList.module.css';\r\n\r\nexport default function EditForm({ editNote, handleCloseEditor }) {\r\n  const { name, created, category, content, dates } = editNote;\r\n  const notes = useSelector(getNotes);\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(true);\r\n  const [nameEdit, setNameEdit] = useState('');\r\n  const [categoryEdit, setCategoryEdit] = useState('');\r\n  const [createdEdit, setCreatedEdit] = useState('');\r\n  const [contentEdit, setContentEdit] = useState('');\r\n  const [datesEdit, setDatesEdit] = useState('');\r\n\r\n  const updatedNote = {\r\n    id: editNote.id,\r\n    name: nameEdit !== '' ? nameEdit : editNote.name,\r\n    created: createdEdit !== '' ? createdEdit : editNote.created,\r\n    category: categoryEdit !== '' ? categoryEdit : editNote.category,\r\n    content: contentEdit !== '' ? contentEdit : editNote.content,\r\n    dates: datesEdit !== '' ? datesEdit : editNote.dates,\r\n    archive: editNote.archive,\r\n  };\r\n\r\n  const saveUpdateNote = updatedNote => dispatch(updateNote(updatedNote));\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason !== 'backdropClick') {\r\n      handleCloseEditor();\r\n      setOpen(!open);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    saveUpdateNote(updatedNote);\r\n    setNameEdit('');\r\n    setCategoryEdit('');\r\n    setCreatedEdit('');\r\n    setContentEdit('');\r\n    setDatesEdit('');\r\n\r\n    handleClose(!open);\r\n  };\r\n  console.log('open', open);\r\n\r\n  return (\r\n    <Dialog disableEscapeKeyDown open={open} onClose={handleClose}>\r\n      <DialogTitle>Edit the note</DialogTitle>\r\n      <DialogContent>\r\n        <Box\r\n          component=\"form\"\r\n          fullWidth\r\n          autoComplete=\"off\"\r\n          sx={{ display: 'flex', flexWrap: 'wrap', width: '100%' }}\r\n        >\r\n          <FormControl>\r\n            <TextField\r\n              id=\"noteName\"\r\n              label=\"Note's name\"\r\n              variant=\"outlined\"\r\n              className={s.formInput}\r\n              defaultValue={name}\r\n              // value={name}\r\n              onChange={e => setNameEdit(e.target.value)}\r\n              style={{ marginTop: 10, marginBottom: 10 }}\r\n            />\r\n\r\n            <TextField\r\n              id=\"created\"\r\n              label=\"Created\"\r\n              defaultValue={created}\r\n              onChange={e => setCreatedEdit(e.target.value)}\r\n              variant=\"filled\"\r\n              className={s.formInput}\r\n              style={{ marginBottom: 10 }}\r\n            />\r\n            <FormControl>\r\n              <InputLabel id=\"category\">Category</InputLabel>\r\n              <Select\r\n                labelId=\"category\"\r\n                lable=\"Choose Category\"\r\n                id=\"select-category\"\r\n                defaultValue={category}\r\n                onChange={e => setCategoryEdit(e.target.value)}\r\n                variant=\"outlined\"\r\n                style={{ marginTop: 10, marginBottom: 10 }}\r\n              >\r\n                <MenuItem value={'Task'}>Task</MenuItem>\r\n                <MenuItem value={'Random Thought'}>Random Thought</MenuItem>\r\n                <MenuItem value={'Idea'}>Idea</MenuItem>\r\n                <MenuItem value={'Quote'}>Quote</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <TextField\r\n              id=\"content\"\r\n              label=\"Content\"\r\n              variant=\"outlined\"\r\n              className={s.formInput}\r\n              defaultValue={content}\r\n              onChange={e => setContentEdit(e.target.value)}\r\n              style={{ marginBottom: 10 }}\r\n            />\r\n            <TextField\r\n              id=\"dates\"\r\n              label=\"Dates\"\r\n              variant=\"outlined\"\r\n              className={s.formInput}\r\n              defaultValue={dates}\r\n              onChange={e => setDatesEdit(e.target.value)}\r\n            />\r\n          </FormControl>\r\n        </Box>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose}>Cancel</Button>\r\n        <Button onClick={handleSubmit}>Ok</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import { Table } from '@mui/material';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport ArchiveIcon from '@mui/icons-material/Archive';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport CurrentIcon from './Icon ';\r\nimport Button from './Button';\r\nimport Form from './Form';\r\nimport FormEdit from './FormEdit';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteNote, archiveNote, updateNote } from '../../redux/notesSlicers';\r\nimport { getNotes } from '../../redux/notesSelectors';\r\nimport s from './NotesList.module.css';\r\n\r\nexport default function NotesList() {\r\n  const notes = useSelector(getNotes);\r\n  const activeNotes = notes.filter(note => !note.archive);\r\n  const archiveNotes = notes.filter(note => note.archive);\r\n\r\n  const [archiveList, setArchiveList] = useState(false);\r\n  const [openEditor, setOpenEditor] = useState(false);\r\n  const [editNote, setEditNote] = useState({});\r\n  const dispatch = useDispatch();\r\n  const handleClickDelete = id => dispatch(deleteNote(id));\r\n  const handleClickArchive = id => dispatch(archiveNote(id));\r\n\r\n  const handleClickUpdate = id => {\r\n    const editNote = notes.find(note => note.id === id);\r\n    setEditNote(editNote);\r\n    setOpenEditor(!openEditor);\r\n  };\r\n\r\n  const handleCloseEditor = () => {\r\n    setOpenEditor(!openEditor);\r\n  };\r\n\r\n  console.log('openEditor', openEditor);\r\n  const handleOpenArchiveList = e => {\r\n    e.preventDefault();\r\n    setArchiveList(!archiveList);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('notes', JSON.stringify(notes));\r\n  }, [notes]);\r\n\r\n  return (\r\n    <>\r\n      <Paper>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow className={s.headerRow}>\r\n              <TableCell className={s.headerDescr}>Name</TableCell>\r\n              <TableCell className={s.headerDescr}>Created</TableCell>\r\n              <TableCell className={s.headerDescr}>Category</TableCell>\r\n              <TableCell className={s.headerDescr}>Content</TableCell>\r\n              <TableCell className={s.headerDescr}>Dates</TableCell>\r\n              <TableCell className={s.headerIcon}>\r\n                \r\n              </TableCell>\r\n              <TableCell className={s.headerIcon}>\r\n                <Button>\r\n                  <ArchiveIcon\r\n                    fontSize=\"small\"\r\n                    className={\r\n                      archiveList ? `${s.activeIcon}` : `${s.archiveIcon}`\r\n                    }\r\n                    onClick={handleOpenArchiveList}\r\n                  />\r\n                </Button>\r\n              </TableCell>\r\n              <TableCell className={s.headerIcon}>\r\n                \r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {archiveList === true &&\r\n              archiveNotes.map(\r\n                ({ id, name, created, category, content, dates }) => {\r\n                  return (\r\n                    <TableRow key={id} className={s.bodyRow}>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                        className={s.bodyRowName}\r\n                      >\r\n                        <CurrentIcon component={category} />\r\n                        {name}\r\n                      </TableCell>\r\n                      <TableCell className={s.bodyDescr}>{created}</TableCell>\r\n                      <TableCell className={s.bodyDescr}>{category}</TableCell>\r\n                      <TableCell className={s.bodyDescr}>{content}</TableCell>\r\n                      <TableCell className={s.bodyDescr}>{dates}</TableCell>\r\n                      <TableCell>\r\n                        <Button>\r\n                          <CreateIcon\r\n                            fontSize=\"small\"\r\n                            className={s.bodyIconBtn}\r\n                            onClick={handleClickUpdate}\r\n                          />\r\n                        </Button>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Button>\r\n                          <ArchiveIcon\r\n                            fontSize=\"small\"\r\n                            className={s.bodyIconBtn}\r\n                            onClick={() => handleClickArchive(id)}\r\n                          />\r\n                        </Button>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Button>\r\n                          <DeleteIcon\r\n                            fontSize=\"small\"\r\n                            className={s.bodyIconBtn}\r\n                            onClick={() => handleClickDelete(id)}\r\n                          />\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                },\r\n              )}\r\n            {archiveList === false &&\r\n              activeNotes.map(\r\n                ({ id, name, created, category, content, dates }) => {\r\n                  return (\r\n                    <TableRow key={id} className={s.bodyRow}>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                        className={s.bodyRowName}\r\n                      >\r\n                        <CurrentIcon component={category} />\r\n                        {name}\r\n                      </TableCell>\r\n                      <TableCell className={s.bodyDescr}>{created}</TableCell>\r\n                      <TableCell className={s.bodyDescr}>{category}</TableCell>\r\n                      <TableCell className={s.bodyDescr}>{content}</TableCell>\r\n                      <TableCell className={s.bodyDescr}>{dates}</TableCell>\r\n                      <TableCell>\r\n                        <Button onClick={e => console.log(e.target)}>\r\n                          <CreateIcon\r\n                            fontSize=\"small\"\r\n                            className={s.bodyIconBtn}\r\n                            onClick={() => handleClickUpdate(id)}\r\n                          />\r\n                        </Button>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Button>\r\n                          <ArchiveIcon\r\n                            fontSize=\"small\"\r\n                            className={s.bodyIconBtn}\r\n                            onClick={() => handleClickArchive(id)}\r\n                          />\r\n                        </Button>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Button>\r\n                          <DeleteIcon\r\n                            fontSize=\"small\"\r\n                            className={s.bodyIconBtn}\r\n                            onClick={() => handleClickDelete(id)}\r\n                          />\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                },\r\n              )}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n      <Form />\r\n      {openEditor && (\r\n        <FormEdit editNote={editNote} handleCloseEditor={handleCloseEditor} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useSelector} from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {getNotes} from '../../redux/notesSelectors';\r\nimport { Table } from '@mui/material';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport CurrentIcon from '../NotesList/Icon ';\r\nimport s from '../NotesList/NotesList.module.css';\r\n\r\nexport default function SummaryList() {\r\n  const notes = useSelector(getNotes);\r\n\r\n  let categoryList = [];\r\n  notes.map(note => {\r\n    const uniqNote = categoryList.find(n => n.category === note.category);\r\n    if (uniqNote) {\r\n      note.archive ? uniqNote.archive+=1 : uniqNote.active+=1;\r\n    } else {\r\n      categoryList.push({\r\n        id: uuidv4(),\r\n        category: note.category,\r\n        active: note.archive ? 0 : 1,\r\n        archive: note.archive ? 1 : 0,\r\n      });\r\n    }\r\n    return categoryList;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Paper>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow className={s.headerRow}>\r\n              <TableCell className={s.headerDescr}>Note Category</TableCell>\r\n              <TableCell className={s.headerDescr}>Active</TableCell>\r\n              <TableCell className={s.headerDescr}>Archived</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {categoryList.map(({ id, category, active, archive }) => {\r\n              return (\r\n                <TableRow key={id} className={s.bodyRow}>\r\n                  <TableCell\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    className={s.bodyRowName}\r\n                  >\r\n                    <CurrentIcon component={category} />\r\n                    {category}\r\n                  </TableCell>\r\n                  <TableCell className={s.bodyDescr}>{active}</TableCell>\r\n                  <TableCell className={s.bodyDescr}>{archive}</TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n","import Container from './components/Container/Container';\r\nimport NotesList from './components/NotesList/NotesList';\r\nimport SummaryList from './components/SummaryList/SummaryList'\r\n\r\n export default function App() {\r\n  return (\r\n    <Container>\r\n      <NotesList />\r\n      <SummaryList/>\r\n    </Container>\r\n  );\r\n};","import rootReducer from './notesSlicers';\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst store = configureStore({\r\n    reducer:rootReducer,\r\n});\r\nexport default store;\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store ={store}> \r\n    <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2Bzc0\"};"],"sourceRoot":""}